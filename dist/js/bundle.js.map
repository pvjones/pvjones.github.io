{"version":3,"sources":["app.js","apod/apodContr.js","apod/apodServ.js","home/geolocation.js","home/liveClock.js","home/mainContr.js","home/weatherServ.js","neo/dateService.js","neo/neoBubbleChart.js","neo/neoContr.js","neo/neoDeserialServ.js","neo/neoService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","controller","templateUrl","otherwise","$scope","apodServ","apodYears","apodMonths","apodDays","i","Date","getFullYear","push","apodLoaded","getCurrentApod","then","response","currentApod","data","yyyy","mm","dd","getApodByDate","queryDate","toString","service","$http","apiKey","currentApodReq","method","dateReq","factory","$q","$window","getCurrentPosition","deferred","defer","navigator","geolocation","reject","position","resolve","err","promise","directive","$interval","scope","restrict","template","link","element","attributes","timeRefresh","timeFormat","format","date","myDate","getHours","greeting","geolocationFact","weatherServ","bgUrl","setBgImage","imgCount","dir","randomCount","Math","round","random","images","weatherLoaded","userLat","coords","latitude","userLong","longitude","getWeather","weatherObj","currently","cloudCover","slice","weatherSummary","summary","visibility","temperature","sunrise","daily","sunriseTime","sunset","sunsetTime","moonPhase","skyView","$sce","currentWeatherURL","trustAsResourceUrl","currentWeatherReq","getCurrentDate","getFormattedDates","getMonth","getDate","apiFormat","join","displayFormat","addDays","days","newDateMs","getTime","createWeek","startDate","endDate","createWeekArray","numberOfWeeks","weekArray","dateCounter","newWeek","radiusSelector","colorSelector","elem","attrs","$watch","n","o","updateChart","diameter","d3","colorInterpolator","interpolateHcl","svg","select","append","attr","console","log","children","packing","layout","pack","sort","size","value","d","padding","max","min","forEach","e","length","radius","node","selectAll","nodes","filter","exit","transition","duration","remove","enter","classed","x","y","style","isPotHazard","r","text","textHandler","neoName","substring","neoService","dateService","resetToggleButtons","active","viewControlObject","mainTitleDate","showMainTitleDate","toggleViewDisplay","getNeoData","showHazardText","showHazard","elements","document","querySelectorAll","classList","toggle","processNeoData","json","neoObjects","near_earth_objects","newNeoObj","rawNeoObj","neoID","neo_reference_id","name","closeApproachDate","close_approach_data","close_approach_date","missDistanceKm","miss_distance","kilometers","estDiameterKm","estimated_diameter","estimated_diameter_max","estimated_diameter_min","relVelocityKph","relative_velocity","kilometers_per_hour","orbitBody","orbiting_body","is_potentially_hazardous_asteroid","neoDeserialServ","neoDataRequest"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('nasaViewer', ['ui.router'])\n  .config(function($stateProvider, $urlRouterProvider) {\n\n    $stateProvider\n      .state('home', {\n        url: '/',\n        controller: 'mainContr',\n        templateUrl: '../views/home.html'\n      })\n      .state('apod', {\n        url: '/apod',\n        controller: 'apodContr',\n        templateUrl: '../views/apod.html'\n      }).state('neo', {\n        url: '/neo',\n        controller: 'neoContr',\n        templateUrl: '../views/neo.html'\n      });\n\n      $urlRouterProvider\n        .otherwise('/')\n\n\n\n  })","angular.module('nasaViewer').controller('apodContr', function($scope, apodServ) {\n\n  $scope.apodYears = [];\n  $scope.apodMonths = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n  $scope.apodDays = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"];\n\n  for (var i = 1996; i <= (new Date().getFullYear()); i++) {\n    $scope.apodYears.push(i);\n  };\n\n  $scope.apodLoaded = false;\n\n  var getCurrentApod = function() {\n    apodServ.getCurrentApod().then(function(response) {\n      $scope.currentApod = response.data;\n      $scope.yyyy = '';\n      $scope.mm = '';\n      $scope.dd = '';\n      $scope.apodLoaded = true;\n    })\n  };\n\n  getCurrentApod();\n\n  $scope.getCurrentApod = getCurrentApod;\n\n  $scope.getApodByDate = function(yyyy, mm, dd) {\n    var queryDate = (yyyy + \"-\" + mm + \"-\" + dd).toString();\n    apodServ.getApodByDate(queryDate).then(function(response) {\n\n      $scope.currentApod = response.data;\n      $scope.apodLoaded = true;\n\n    })\n  }\n\n});","angular.module('nasaViewer').service('apodServ', function($http) {\n\n  var apiKey = '2DGaM1ahLanQmj6wbsyHjLpe54YCodSEzsvm4cjZ';\n\n  this.getCurrentApod = function() {\n    var currentApodReq = {\n      method: 'GET',\n      url: 'https://api.nasa.gov/planetary/apod?api_key=' + apiKey,\n    };\n    return $http(currentApodReq);\n  };\n\n  this.getApodByDate = function(queryDate) {\n    var dateReq = {\n      method: 'GET',\n      url: 'https://api.nasa.gov/planetary/apod?api_key=' + apiKey + \"&date=\" + queryDate\n    };\n    return $http(dateReq);\n  };\n\n});","angular.module('nasaViewer').factory('geolocationFact', ['$q', '$window', function ($q, $window) {\n\n    'use strict';\n\n    function getCurrentPosition() {\n        var deferred = $q.defer();\n\n        if (!$window.navigator.geolocation) {\n            deferred.reject('Geolocation not supported.');\n        } else {\n            $window.navigator.geolocation.getCurrentPosition(\n                function (position) {\n                    deferred.resolve(position);\n                },\n                function (err) {\n                    deferred.reject(err);\n                });\n        }\n\n        return deferred.promise;\n    }\n\n    return {\n        getCurrentPosition: getCurrentPosition\n    };\n}]);","angular.module('nasaViewer').directive('liveClock', function($interval) {\n  return {\n    scope: true, //isolates directive\n    restrict: 'E',\n    template: \"<span class='live-clock-greeting'>{{greeting}}, the current time is: <br /></span><span class='live-clock-time'>{{date.now() | date: timeFormat}}</span>\",\n    link: function(scope, element, attributes) {\n\n      timeRefresh();\n\n      function timeRefresh() {\n        scope.timeFormat = (attributes.format === '12') ? 'hh:mm a' : 'HH:mm';\n        scope.date = Date;\n\n        var myDate = new Date();\n        /* hour is before noon */\n        if (myDate.getHours() < 12) {\n          scope.greeting = \"Good Morning\";\n        } else /* Hour is from noon to 5pm (actually to 5:59 pm) */\n        if (myDate.getHours() >= 12 && myDate.getHours() <= 17) {\n          scope.greeting = \"Good Afternoon\";\n        } else /* the hour is after 5pm, so it is between 6pm and midnight */\n        if (myDate.getHours() > 17 && myDate.getHours() <= 24) {\n          scope.greeting = \"Good Evening\";;\n        } else /* the hour is not between 0 and 24, so something is wrong */ {\n          scope.greeting = \"Hello\";\n        }\n\n\n      }\n\n\n      $interval(timeRefresh, 1000);\n    }\n  }\n})","angular.module('nasaViewer').controller('mainContr', function($scope, apodServ, geolocationFact, weatherServ) {\n\n  //default background image (set because sometimes images[randomCount] below is evaluating undefined)\n  $scope.bgUrl = {\n    'background-image': \"url('../images/home/bg-01.jpg')\"\n  }\n\n  $scope.setBgImage = function() {\n    var imgCount = 4;\n    var dir = '../images/home/';\n    var randomCount = Math.round(Math.random() * (imgCount - 1)) + 1;\n    var images = [\n      \"bg-01.jpg\",\n      \"bg-02.jpg\",\n      \"bg-03.jpg\",\n      \"bg-04.jpg\"\n    ];\n\n    if (images[randomCount]) {\n      $scope.bgUrl = {\n        'background-image': \"url('\" + dir + images[randomCount] + \"')\"\n      }\n    }\n  }\n\n  //only show widgets once data is returned\n  $scope.weatherLoaded = false;\n\n  apodServ.getCurrentApod().then(function(response) {\n    $scope.currentApod = response.data;\n  });\n\n  geolocationFact.getCurrentPosition().then(function(response) {\n    var userLat = response.coords.latitude;\n    var userLong = response.coords.longitude;\n    weatherServ.getWeather(userLat, userLong).then(function(response) {\n      var weatherObj = response.data.currently;\n      $scope.cloudCover = (weatherObj.cloudCover * 100).toString().slice(0, 2);\n      $scope.weatherSummary = weatherObj.summary;\n      $scope.visibility = weatherObj.visibility;\n      $scope.temperature = weatherObj.temperature;\n      $scope.sunrise = response.data.daily.data[0].sunriseTime * 1000; //convert from unix to JS time\n      $scope.sunset = response.data.daily.data[0].sunsetTime * 1000;\n      $scope.moonPhase = response.data.daily.data[0].moonPhase;\n\n      var skyView = \"\"\n      if ($scope.cloudCover === 0 && $scope.visibility > 9) {\n        skyView = \"excellent\";\n      } else if (weatherObj.cloudCover < 0.2 && weatherObj.visibility > 8) {\n        skyView = \"good\";\n      } else if (weatherObj.cloudCover < 0.3 && weatherObj.visibility > 5) {\n        skyView = \"fair\";\n      } else if (weatherObj.cloudCover > 0.3 || weatherObj.visibility < 1) {\n        skyView = \"poor\";\n      } else {\n        skyView = \"unknown\";\n      }\n\n      $scope.skyView = skyView;\n      $scope.weatherLoaded = true;\n    })\n  });\n\n\n\n});","angular.module('nasaViewer').service('weatherServ', function($http, $sce) {\n\n  var apiKey = \"aa55d72a47da5d7d1bcabcb04ad92fdd\";\n\n  this.getWeather = function(userLat, userLong) {\n    var currentWeatherURL = $sce.trustAsResourceUrl(\"https://api.darksky.net/forecast/\" + apiKey + \"/\" + userLat + \",\" + userLong)\n\n    var currentWeatherReq = {\n      method: 'JSONP',\n      url: currentWeatherURL\n    }\n    \n    return $http(currentWeatherReq);\n  }\n  \n\n\n});","  angular.module('nasaViewer').service('dateService', function() {\n\n  this.getCurrentDate = function() {\n    return new Date();\n  }\n\n  function getFormattedDates(date) {\n\n    var mm = date.getMonth() + 1;\n    var dd = date.getDate();\n    var yyyy = date.getFullYear();\n    return {\n      apiFormat: ([\n        yyyy,\n        \"-\",\n        ((mm > 9) ? '' : '0') + mm,\n        \"-\",\n        ((dd > 9) ? '' : '0') + dd\n      ]).join(''),\n      displayFormat: ([\n        ((mm > 9) ? '' : '0') + mm,\n        \"-\",\n        ((dd > 9) ? '' : '0') + dd,\n        \"-\",\n        yyyy\n      ]).join('')\n    }\n  }\n\n  function addDays(date, days) {\n    var newDateMs = date.getTime() + 60 * 60 * 24 * 1000 * days;\n    return new Date(newDateMs);\n  }\n\n  function createWeek(startDate) {\n    return {\n      startDate: getFormattedDates(startDate),\n      endDate: getFormattedDates(addDays(startDate, 7))\n    }\n  }\n\n  this.createWeekArray = function(startDate, numberOfWeeks) {\n    let weekArray = [];\n    let dateCounter = startDate;\n    for (let i = 0; i < numberOfWeeks; i++) {\n      let newWeek = createWeek(dateCounter);\n      weekArray.push(newWeek);\n      dateCounter = addDays(dateCounter, 7);\n    }\n    return weekArray;\n  }\n\n\n\n});","angular.module('nasaViewer').directive('bubbleChart', function() {\n    return {\n      restrict: 'E',\n      scope: {\n        data: '=',\n        radiusSelector: '=',\n        colorSelector: \"=\"\n      },\n      link: function($scope, elem, attrs) {\n\n          $scope.$watch(\"data\", function(n, o) {\n            if (n !== o) {\n              updateChart();\n            }\n          });\n\n          $scope.$watch(\"radiusSelector\", function(n, o) {\n            if (n !== o) {\n              updateChart();\n            }\n          });\n\n          $scope.$watch(\"colorSelector\", function(n, o) {\n            if (n !== o) {\n              updateChart();\n            }\n          });\n\n\n          //definitions\n          var diameter = 800,\n            format = d3.format(\",d\");\n\n          var colorInterpolator = d3.interpolateHcl(\"#750076\", \"#ffa346\");\n\n          //create svg html element for directive and set attributes\n          var svg = d3.select(elem[0])\n            .append(\"svg\")\n            .attr(\"width\", diameter)\n            .attr(\"height\", diameter)\n            .attr(\"class\", \"bubble\")\n\n          function updateChart() {\n\n            var radiusSelector = $scope.radiusSelector;\n            var colorSelector = $scope.colorSelector;\n            var data = $scope.data;\n            console.log(\"colorSelector value\", data.children[0][colorSelector])\n\n            //define pack\n            var packing = d3.layout.pack()\n              .sort(null)\n              .size([diameter, diameter])\n              .value(function(d) {\n                return d[radiusSelector]; // VALUE ACCESSOR -- change this to a variable\n              })\n              .padding(5);\n\n            //color interpolation max and min\n            var max, min;\n            data.children.forEach(function(e) {\n              max = (+e[colorSelector] < +max ? +max : +e[colorSelector]);\n              min = (+e[colorSelector] > +min ? +min : +e[colorSelector]);\n            });\n\n            if (data && data.children.length > 0) {\n              packing.radius()\n\n              var node = svg.selectAll(\".node\")\n                .data(packing.nodes(data)\n                  .filter(function(d) { //commenting this out gives container circle a blue background\n                    return !d.children;\n                  })\n                );\n\n              node.exit().transition().duration(0).remove();\n\n              node.select(\"text\").remove()\n\n              node.enter().append(\"g\")\n                .classed(\"node\", true)\n                .attr(\"transform\", function(d) {\n                  return \"translate(\" + d.x + \",\" + d.y + \")\";\n                })\n                .append(\"circle\")\n                .style(\"fill\", function(d) {\n                  return colorInterpolator((+d[colorSelector] - +min) / (+max - +min));\n                })\n                .attr('fill-opacity', 0.7)\n                .attr('stroke', function(d) {\n                  return colorInterpolator((+d[colorSelector] - +min) / (+max - +min));\n                })\n                .attr('stroke-width', 2)\n                .attr(\"class\", function(d) {\n                  if (d.isPotHazard) {\n                    return \"is-hazard\"\n                  }\n                })\n\n              node.transition()\n                .attr(\"transform\", function(d) {\n                  return \"translate(\" + d.x + \",\" + d.y + \")\";\n                });\n\n              node.select(\"circle\")\n                .transition()\n                .attr(\"r\", function(d) {\n                  return d.r;\n                })\n\n              node.append(\"text\")\n                .attr(\"dy\", \".3em\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\")\n                .text(function(d) {\n                  return textHandler(d);\n                });\n            } //end of if statement\n          } //end of update function\n          function textHandler(d) {\n            if (d.r < 30) {\n              return \"\";\n            }\n            return d.neoName.substring(0, d.r / 2.5)\n          }\n        } //end of link\n    } //end of return\n  }) //end of directive","angular.module('nasaViewer').controller('neoContr', function($scope, neoService, dateService) {\n\n\n  $scope.weekArray = dateService.createWeekArray(dateService.getCurrentDate(), 8);\n\n  $scope.resetToggleButtons = function() {\n    for (let i = 0; i < $scope.weekArray.length; i++) {\n      $scope.weekArray[i].active = false;\n    }\n  };\n\n  $scope.resetToggleButtons();\n\n  $scope.viewControlObject = {\n    mainTitleDate: \"\",\n    showMainTitleDate: false,\n  }\n\n\n\n  $scope.radiusSelector = \"estDiameterKm\";\n  $scope.colorSelector = \"missDistanceKm\";\n\n  $scope.toggleViewDisplay = function(date) {\n    $scope.viewControlObject.mainTitleDate = date;\n    $scope.viewControlObject.showMainTitleDate = true;\n  }\n\n\n  $scope.getNeoData = function(startDate, endDate) {\n\n    neoService.getNeoData(startDate, endDate).then(function(response) {\n      $scope.data = response;\n    })\n  }\n\n  // $scope.hideHazardToggle = true;\n\n  // $scope.showHazard = function() {\n  //   var elements = document.getElementsByClassName(\"is-hazard\");\n  //   console.log(elements)\n  //   if ($scope.showHazardToggle) {\n  //     for (let i = 0; i < elements.length; i++) {\n  //       if (elements[i].classList[0] == \"is-hazard\") {\n  //         elements[i].classList[1] = \"show-hazard\"\n  //         console.log(elements[i].classList[1])\n  //       }\n  //     }  \n  //   } else {\n  //      for (let i = 0; i < elements.length; i++) {\n  //       if (elements[i].classList[0] == \"is-hazard\") {\n\n  //       }\n  //     }  \n\n  //   }\n\n  $scope.showHazardText = \"Show\";\n \n  $scope.showHazard = function() {\n    var elements = document.querySelectorAll(\".is-hazard\");\n    elements.forEach(function(e) {\n      e.classList.toggle(\"show-hazard\")\n    $scope.showHazardText = ($scope.showHazardText === \"Show\" ? \"Hide\" : \"Show\" )\n    })\n\n\n\n  }\n\n\n\n});","angular.module('nasaViewer').service('neoDeserialServ', function() {\n\n  this.processNeoData = function(json) {\n\n    var neoObjects = [];\n\n    // loop through days of week\n    for (var date in json.near_earth_objects) {\n      // for each day, loop through asteroid objects\n      for (var i = 0; i < json.near_earth_objects[date].length; i++) {\n\n        var newNeoObj = {};\n        var rawNeoObj = json.near_earth_objects[date][i]\n\n        // ID number\n        newNeoObj.neoID = rawNeoObj.neo_reference_id;\n        // NEO name\n        newNeoObj.neoName = rawNeoObj.name;\n        // Date of closest approach\n        newNeoObj.closeApproachDate = rawNeoObj.close_approach_data[0].close_approach_date;\n        // Closest approach distance\n        newNeoObj.missDistanceKm = rawNeoObj.close_approach_data[0].miss_distance.kilometers;\n        // Mean estimated diameter\n        newNeoObj.estDiameterKm = (rawNeoObj.estimated_diameter.kilometers.estimated_diameter_max + rawNeoObj.estimated_diameter.kilometers.estimated_diameter_min) / 2;\n        // Relative velocity\n        newNeoObj.relVelocityKph = rawNeoObj.close_approach_data[0].relative_velocity.kilometers_per_hour;\n        // Orbiting body\n        newNeoObj.orbitBody = rawNeoObj.close_approach_data[0].orbiting_body;\n        // Is NEO classified as potentially hazardous?\n        newNeoObj.isPotHazard = rawNeoObj.is_potentially_hazardous_asteroid;\n\n        neoObjects.push(newNeoObj)\n      };\n    }\n    return {\n      children: neoObjects\n    }\n  }\n\n});","angular.module('nasaViewer').service('neoService', function($http, neoDeserialServ, dateService) {\n\n  //NASA api key\n  var apiKey = \"2DGaM1ahLanQmj6wbsyHjLpe54YCodSEzsvm4cjZ\";\n\n  // http request for all neo with nearest approach over next 7 days\n  this.getNeoData = function(startDate, endDate) {\n\n    var neoDataRequest = {\n\n      method: \"GET\",\n      url: \"https://api.nasa.gov/neo/rest/v1/feed?start_date=\" + startDate + \"&end_date=\" + endDate + \"&api_key=\" + apiKey\n    }\n\n    var promise = $http(neoDataRequest).then(function(response) {\n      // strip header and hand off to deserializing service\n\n      return neoDeserialServ.processNeoData(response.data);\n\n    })\n\n    return promise; //must return the promise for accessing functions\n\n  }\n\n\n\n});"]}